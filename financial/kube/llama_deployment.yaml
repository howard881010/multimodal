apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama3-70b-deployment
  labels:
    app: vllm-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-app
  template:
    metadata:
      labels:
        app: vllm-app
    spec:
      containers:
      - image: vllm/vllm-openai:latest
        ports:
        - containerPort: 8000
        name: gpu-container
        resources:
          limits:
            cpu: 12
            memory: 128G
            nvidia.com/a100: "4"
          requests:
            cpu: 12
            memory: 64G
            nvidia.com/a100: "4"
        command:
        - /bin/bash
        - -c
        - |
          python3 -m vllm.entrypoints.openai.api_server \
          --model meta-llama/Meta-Llama-3-70B-instruct \
          --api-key 67c21f73-9d1c-40f7-8a2f-adf2c9274f46 --trust-remote-code \
          --gpu-memory-utilization=0.9 \
          --tensor-parallel-size=4
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          value: "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"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONIOENCODING
          value: UTF-8
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PYTHONPATH
          value: src
        volumeMounts:
        - name: vllm-volume
          mountPath: /root/.cache/huggingface
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - NVIDIA-A100-SXM4-80GB
              # - key: kubernetes.io/hostname
              #   operator: NotIn
              #   values:
              #   - node-1-3.sdsc.optiputer.net
      volumes:
      - name: vllm-volume
        persistentVolumeClaim:
          claimName: kai-vllm-pvc
